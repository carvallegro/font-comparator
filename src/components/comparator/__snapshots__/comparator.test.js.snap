// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Comparator/> renders default Comparator 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ComparatorJSX
    typeface="arial"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <h1
          id="an-h1-header"
        >
          An h1 header
        </h1>,
        <p>
          Paragraphs are separated by a blank line.
        </p>,
        <p>
          2nd paragraph. 
          <em>
            Italic
          </em>
          , 
          <strong>
            bold
          </strong>
          , and 
          <code>
            monospace
          </code>
          . Itemized lists look like:
        </p>,
        <ul>
          <li>
            this one
          </li>
          <li>
            that one
          </li>
          <li>
            the other one
          </li>
        </ul>,
        <p>
          Note that — not considering the asterisk — the actual text content starts at 4-columns in.
        </p>,
        <blockquote>
          <p>
            Block quotes are written like so.
          </p>
          <p>
            They can span multiple paragraphs, if you like.
          </p>
        </blockquote>,
        <p>
          Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺
        </p>,
        <h2
          id="an-h2-header"
        >
          An h2 header
        </h2>,
        <p>
          Here’s a numbered list:
        </p>,
        <ol>
          <li>
            first item
          </li>
          <li>
            second item
          </li>
          <li>
            third item
          </li>
        </ol>,
        <p>
          Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:
        </p>,
        <p>
          As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:
        </p>,
        <p>
          (which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:
        </p>,
        <div>
          <pre>
            <code>
              <span>
                import
              </span>
               time
              <span>
                # Quick, count to ten!
              </span>
              <span>
                for
              </span>
               i 
              <span>
                in
              </span>
               
              <span>
                range
              </span>
              (
              <span>
                10
              </span>
              ):
              <span>
                # (but not *too* quick)
              </span>
              time.sleep(
              <span>
                0.5
              </span>
              )
              <span>
                print
              </span>
               i
            </code>
          </pre>
        </div>,
        <h3
          id="an-h3-header"
        >
          An h3 header
        </h3>,
        <p>
          Now a nested list:
        </p>,
        <ol>
          <li>
            <p>
              First, get these ingredients:
            </p>
            <ul>
              <li>
                carrots
              </li>
              <li>
                celery
              </li>
              <li>
                lentils
              </li>
            </ul>
          </li>
          <li>
            <p>
              Boil some water.
            </p>
          </li>
          <li>
            <p>
              Dump everything in the pot and follow this algorithm:
            </p>
            <pre>
              <code>
                find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
              </code>
            </pre>
            <p>
              Do not bump wooden spoon or it will fall.
            </p>
          </li>
        </ol>,
        <p>
          Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).
        </p>,
        <p>
          Here’s a link to 
          <a
            href="http://foo.bar"
          >
            a website
          </a>
          , to a 
          <a
            href="local-doc.html"
          >
            local doc
          </a>
          , and to a 
          <a
            href="#an-h2-header"
          >
            section heading in the current doc
          </a>
          . Here’s a footnote 
          <a
            href="#fn1"
            id="fnref1"
          >
            <sup>
              1
            </sup>
          </a>
          .
        </p>,
        <p>
          Tables can look like this:
        </p>,
        <table>
          <caption>
            Shoes, their sizes, and what they’re made of
          </caption>
          <thead>
            <tr>
              <th>
                size
              </th>
              <th
                align="left"
              >
                material
              </th>
              <th
                align="left"
              >
                color
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                9
              </td>
              <td
                align="left"
              >
                leather
              </td>
              <td
                align="left"
              >
                brown
              </td>
            </tr>
            <tr>
              <td>
                10
              </td>
              <td
                align="left"
              >
                hemp canvas
              </td>
              <td
                align="left"
              >
                natural
              </td>
            </tr>
            <tr>
              <td>
                11
              </td>
              <td
                align="left"
              >
                glass
              </td>
              <td
                align="left"
              >
                transparent
              </td>
            </tr>
          </tbody>
        </table>,
        <p>
          (The above is the caption for the table.) Pandoc also supports multi-line tables:
        </p>,
        <p>
          Here’s a definition list:
        </p>,
        <dl>
          <dt>
            apples
          </dt>
          <dd>
            Good for making applesauce. oranges
          </dd>
          <dd>
            Citrus! tomatoes
          </dd>
          <dd>
            There’s no “e” in tomatoe.
          </dd>
        </dl>,
        <p>
          Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)
        </p>,
        <p>
          Here’s a “line block”:
        </p>,
        <p>
          Line one
          <br />
            Line too
          <br />
          Line tree
        </p>,
        <p>
          and images can be specified like so:
        </p>,
        <div>
          <img
            alt="example"
            src="example-image.jpg"
            title="An exemplary image"
          />
          <p>
            example image
          </p>
        </div>,
      ],
      "typeface": "arial",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "An h1 header",
          "id": "an-h1-header",
        },
        "ref": null,
        "rendered": "An h1 header",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Paragraphs are separated by a blank line.",
        },
        "ref": null,
        "rendered": "Paragraphs are separated by a blank line.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "2nd paragraph. ",
            <em>
              Italic
            </em>,
            ", ",
            <strong>
              bold
            </strong>,
            ", and ",
            <code>
              monospace
            </code>,
            ". Itemized lists look like:",
          ],
        },
        "ref": null,
        "rendered": Array [
          "2nd paragraph. ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Italic",
            },
            "ref": null,
            "rendered": "Italic",
            "type": "em",
          },
          ", ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "bold",
            },
            "ref": null,
            "rendered": "bold",
            "type": "strong",
          },
          ", and ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "monospace",
            },
            "ref": null,
            "rendered": "monospace",
            "type": "code",
          },
          ". Itemized lists look like:",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              this one
            </li>,
            <li>
              that one
            </li>,
            <li>
              the other one
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "this one",
            },
            "ref": null,
            "rendered": "this one",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "that one",
            },
            "ref": null,
            "rendered": "that one",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "the other one",
            },
            "ref": null,
            "rendered": "the other one",
            "type": "li",
          },
        ],
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
        },
        "ref": null,
        "rendered": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              Block quotes are written like so.
            </p>,
            <p>
              They can span multiple paragraphs, if you like.
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Block quotes are written like so.",
            },
            "ref": null,
            "rendered": "Block quotes are written like so.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "They can span multiple paragraphs, if you like.",
            },
            "ref": null,
            "rendered": "They can span multiple paragraphs, if you like.",
            "type": "p",
          },
        ],
        "type": "blockquote",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
        },
        "ref": null,
        "rendered": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "An h2 header",
          "id": "an-h2-header",
        },
        "ref": null,
        "rendered": "An h2 header",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Here’s a numbered list:",
        },
        "ref": null,
        "rendered": "Here’s a numbered list:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              first item
            </li>,
            <li>
              second item
            </li>,
            <li>
              third item
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "first item",
            },
            "ref": null,
            "rendered": "first item",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "second item",
            },
            "ref": null,
            "rendered": "second item",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "third item",
            },
            "ref": null,
            "rendered": "third item",
            "type": "li",
          },
        ],
        "type": "ol",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
        },
        "ref": null,
        "rendered": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
        },
        "ref": null,
        "rendered": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
        },
        "ref": null,
        "rendered": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <pre>
            <code>
              <span>
                import
              </span>
               time
              <span>
                # Quick, count to ten!
              </span>
              <span>
                for
              </span>
               i 
              <span>
                in
              </span>
               
              <span>
                range
              </span>
              (
              <span>
                10
              </span>
              ):
              <span>
                # (but not *too* quick)
              </span>
              time.sleep(
              <span>
                0.5
              </span>
              )
              <span>
                print
              </span>
               i
            </code>
          </pre>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <code>
              <span>
                import
              </span>
               time
              <span>
                # Quick, count to ten!
              </span>
              <span>
                for
              </span>
               i 
              <span>
                in
              </span>
               
              <span>
                range
              </span>
              (
              <span>
                10
              </span>
              ):
              <span>
                # (but not *too* quick)
              </span>
              time.sleep(
              <span>
                0.5
              </span>
              )
              <span>
                print
              </span>
               i
            </code>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span>
                  import
                </span>,
                " time",
                <span>
                  # Quick, count to ten!
                </span>,
                <span>
                  for
                </span>,
                " i ",
                <span>
                  in
                </span>,
                " ",
                <span>
                  range
                </span>,
                "(",
                <span>
                  10
                </span>,
                "):",
                <span>
                  # (but not *too* quick)
                </span>,
                "time.sleep(",
                <span>
                  0.5
                </span>,
                ")",
                <span>
                  print
                </span>,
                " i",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "import",
                },
                "ref": null,
                "rendered": "import",
                "type": "span",
              },
              " time",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "# Quick, count to ten!",
                },
                "ref": null,
                "rendered": "# Quick, count to ten!",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "for",
                },
                "ref": null,
                "rendered": "for",
                "type": "span",
              },
              " i ",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "in",
                },
                "ref": null,
                "rendered": "in",
                "type": "span",
              },
              " ",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "range",
                },
                "ref": null,
                "rendered": "range",
                "type": "span",
              },
              "(",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "10",
                },
                "ref": null,
                "rendered": "10",
                "type": "span",
              },
              "):",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "# (but not *too* quick)",
                },
                "ref": null,
                "rendered": "# (but not *too* quick)",
                "type": "span",
              },
              "time.sleep(",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "0.5",
                },
                "ref": null,
                "rendered": "0.5",
                "type": "span",
              },
              ")",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "print",
                },
                "ref": null,
                "rendered": "print",
                "type": "span",
              },
              " i",
            ],
            "type": "code",
          },
          "type": "pre",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "An h3 header",
          "id": "an-h3-header",
        },
        "ref": null,
        "rendered": "An h3 header",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Now a nested list:",
        },
        "ref": null,
        "rendered": "Now a nested list:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <p>
                First, get these ingredients:
              </p>
              <ul>
                <li>
                  carrots
                </li>
                <li>
                  celery
                </li>
                <li>
                  lentils
                </li>
              </ul>
            </li>,
            <li>
              <p>
                Boil some water.
              </p>
            </li>,
            <li>
              <p>
                Dump everything in the pot and follow this algorithm:
              </p>
              <pre>
                <code>
                  find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                </code>
              </pre>
              <p>
                Do not bump wooden spoon or it will fall.
              </p>
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  First, get these ingredients:
                </p>,
                <ul>
                  <li>
                    carrots
                  </li>
                  <li>
                    celery
                  </li>
                  <li>
                    lentils
                  </li>
                </ul>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "First, get these ingredients:",
                },
                "ref": null,
                "rendered": "First, get these ingredients:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li>
                      carrots
                    </li>,
                    <li>
                      celery
                    </li>,
                    <li>
                      lentils
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "carrots",
                    },
                    "ref": null,
                    "rendered": "carrots",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "celery",
                    },
                    "ref": null,
                    "rendered": "celery",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "lentils",
                    },
                    "ref": null,
                    "rendered": "lentils",
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <p>
                Boil some water.
              </p>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Boil some water.",
              },
              "ref": null,
              "rendered": "Boil some water.",
              "type": "p",
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Dump everything in the pot and follow this algorithm:
                </p>,
                <pre>
                  <code>
                    find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                  </code>
                </pre>,
                <p>
                  Do not bump wooden spoon or it will fall.
                </p>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Dump everything in the pot and follow this algorithm:",
                },
                "ref": null,
                "rendered": "Dump everything in the pot and follow this algorithm:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <code>
                    find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                  </code>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                  },
                  "ref": null,
                  "rendered": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                  "type": "code",
                },
                "type": "pre",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Do not bump wooden spoon or it will fall.",
                },
                "ref": null,
                "rendered": "Do not bump wooden spoon or it will fall.",
                "type": "p",
              },
            ],
            "type": "li",
          },
        ],
        "type": "ol",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
        },
        "ref": null,
        "rendered": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Here’s a link to ",
            <a
              href="http://foo.bar"
            >
              a website
            </a>,
            ", to a ",
            <a
              href="local-doc.html"
            >
              local doc
            </a>,
            ", and to a ",
            <a
              href="#an-h2-header"
            >
              section heading in the current doc
            </a>,
            ". Here’s a footnote ",
            <a
              href="#fn1"
              id="fnref1"
            >
              <sup>
                1
              </sup>
            </a>,
            ".",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Here’s a link to ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "a website",
              "href": "http://foo.bar",
            },
            "ref": null,
            "rendered": "a website",
            "type": "a",
          },
          ", to a ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "local doc",
              "href": "local-doc.html",
            },
            "ref": null,
            "rendered": "local doc",
            "type": "a",
          },
          ", and to a ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "section heading in the current doc",
              "href": "#an-h2-header",
            },
            "ref": null,
            "rendered": "section heading in the current doc",
            "type": "a",
          },
          ". Here’s a footnote ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <sup>
                1
              </sup>,
              "href": "#fn1",
              "id": "fnref1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "1",
              },
              "ref": null,
              "rendered": "1",
              "type": "sup",
            },
            "type": "a",
          },
          ".",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Tables can look like this:",
        },
        "ref": null,
        "rendered": "Tables can look like this:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <caption>
              Shoes, their sizes, and what they’re made of
            </caption>,
            <thead>
              <tr>
                <th>
                  size
                </th>
                <th
                  align="left"
                >
                  material
                </th>
                <th
                  align="left"
                >
                  color
                </th>
              </tr>
            </thead>,
            <tbody>
              <tr>
                <td>
                  9
                </td>
                <td
                  align="left"
                >
                  leather
                </td>
                <td
                  align="left"
                >
                  brown
                </td>
              </tr>
              <tr>
                <td>
                  10
                </td>
                <td
                  align="left"
                >
                  hemp canvas
                </td>
                <td
                  align="left"
                >
                  natural
                </td>
              </tr>
              <tr>
                <td>
                  11
                </td>
                <td
                  align="left"
                >
                  glass
                </td>
                <td
                  align="left"
                >
                  transparent
                </td>
              </tr>
            </tbody>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Shoes, their sizes, and what they’re made of",
            },
            "ref": null,
            "rendered": "Shoes, their sizes, and what they’re made of",
            "type": "caption",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <th>
                  size
                </th>
                <th
                  align="left"
                >
                  material
                </th>
                <th
                  align="left"
                >
                  color
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    size
                  </th>,
                  <th
                    align="left"
                  >
                    material
                  </th>,
                  <th
                    align="left"
                  >
                    color
                  </th>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "size",
                  },
                  "ref": null,
                  "rendered": "size",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "align": "left",
                    "children": "material",
                  },
                  "ref": null,
                  "rendered": "material",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "align": "left",
                    "children": "color",
                  },
                  "ref": null,
                  "rendered": "color",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr>
                  <td>
                    9
                  </td>
                  <td
                    align="left"
                  >
                    leather
                  </td>
                  <td
                    align="left"
                  >
                    brown
                  </td>
                </tr>,
                <tr>
                  <td>
                    10
                  </td>
                  <td
                    align="left"
                  >
                    hemp canvas
                  </td>
                  <td
                    align="left"
                  >
                    natural
                  </td>
                </tr>,
                <tr>
                  <td>
                    11
                  </td>
                  <td
                    align="left"
                  >
                    glass
                  </td>
                  <td
                    align="left"
                  >
                    transparent
                  </td>
                </tr>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      9
                    </td>,
                    <td
                      align="left"
                    >
                      leather
                    </td>,
                    <td
                      align="left"
                    >
                      brown
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "9",
                    },
                    "ref": null,
                    "rendered": "9",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "leather",
                    },
                    "ref": null,
                    "rendered": "leather",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "brown",
                    },
                    "ref": null,
                    "rendered": "brown",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      10
                    </td>,
                    <td
                      align="left"
                    >
                      hemp canvas
                    </td>,
                    <td
                      align="left"
                    >
                      natural
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "10",
                    },
                    "ref": null,
                    "rendered": "10",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "hemp canvas",
                    },
                    "ref": null,
                    "rendered": "hemp canvas",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "natural",
                    },
                    "ref": null,
                    "rendered": "natural",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      11
                    </td>,
                    <td
                      align="left"
                    >
                      glass
                    </td>,
                    <td
                      align="left"
                    >
                      transparent
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "11",
                    },
                    "ref": null,
                    "rendered": "11",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "glass",
                    },
                    "ref": null,
                    "rendered": "glass",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "transparent",
                    },
                    "ref": null,
                    "rendered": "transparent",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
        },
        "ref": null,
        "rendered": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Here’s a definition list:",
        },
        "ref": null,
        "rendered": "Here’s a definition list:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <dt>
              apples
            </dt>,
            <dd>
              Good for making applesauce. oranges
            </dd>,
            <dd>
              Citrus! tomatoes
            </dd>,
            <dd>
              There’s no “e” in tomatoe.
            </dd>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "apples",
            },
            "ref": null,
            "rendered": "apples",
            "type": "dt",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Good for making applesauce. oranges",
            },
            "ref": null,
            "rendered": "Good for making applesauce. oranges",
            "type": "dd",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Citrus! tomatoes",
            },
            "ref": null,
            "rendered": "Citrus! tomatoes",
            "type": "dd",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "There’s no “e” in tomatoe.",
            },
            "ref": null,
            "rendered": "There’s no “e” in tomatoe.",
            "type": "dd",
          },
        ],
        "type": "dl",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
        },
        "ref": null,
        "rendered": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Here’s a “line block”:",
        },
        "ref": null,
        "rendered": "Here’s a “line block”:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Line one",
            <br />,
            "  Line too",
            <br />,
            "Line tree",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Line one",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "  Line too",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "Line tree",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "and images can be specified like so:",
        },
        "ref": null,
        "rendered": "and images can be specified like so:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="example"
              src="example-image.jpg"
              title="An exemplary image"
            />,
            <p>
              example image
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "alt": "example",
              "src": "example-image.jpg",
              "title": "An exemplary image",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "example image",
            },
            "ref": null,
            "rendered": "example image",
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <h1
            id="an-h1-header"
          >
            An h1 header
          </h1>,
          <p>
            Paragraphs are separated by a blank line.
          </p>,
          <p>
            2nd paragraph. 
            <em>
              Italic
            </em>
            , 
            <strong>
              bold
            </strong>
            , and 
            <code>
              monospace
            </code>
            . Itemized lists look like:
          </p>,
          <ul>
            <li>
              this one
            </li>
            <li>
              that one
            </li>
            <li>
              the other one
            </li>
          </ul>,
          <p>
            Note that — not considering the asterisk — the actual text content starts at 4-columns in.
          </p>,
          <blockquote>
            <p>
              Block quotes are written like so.
            </p>
            <p>
              They can span multiple paragraphs, if you like.
            </p>
          </blockquote>,
          <p>
            Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺
          </p>,
          <h2
            id="an-h2-header"
          >
            An h2 header
          </h2>,
          <p>
            Here’s a numbered list:
          </p>,
          <ol>
            <li>
              first item
            </li>
            <li>
              second item
            </li>
            <li>
              third item
            </li>
          </ol>,
          <p>
            Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:
          </p>,
          <p>
            As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:
          </p>,
          <p>
            (which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:
          </p>,
          <div>
            <pre>
              <code>
                <span>
                  import
                </span>
                 time
                <span>
                  # Quick, count to ten!
                </span>
                <span>
                  for
                </span>
                 i 
                <span>
                  in
                </span>
                 
                <span>
                  range
                </span>
                (
                <span>
                  10
                </span>
                ):
                <span>
                  # (but not *too* quick)
                </span>
                time.sleep(
                <span>
                  0.5
                </span>
                )
                <span>
                  print
                </span>
                 i
              </code>
            </pre>
          </div>,
          <h3
            id="an-h3-header"
          >
            An h3 header
          </h3>,
          <p>
            Now a nested list:
          </p>,
          <ol>
            <li>
              <p>
                First, get these ingredients:
              </p>
              <ul>
                <li>
                  carrots
                </li>
                <li>
                  celery
                </li>
                <li>
                  lentils
                </li>
              </ul>
            </li>
            <li>
              <p>
                Boil some water.
              </p>
            </li>
            <li>
              <p>
                Dump everything in the pot and follow this algorithm:
              </p>
              <pre>
                <code>
                  find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                </code>
              </pre>
              <p>
                Do not bump wooden spoon or it will fall.
              </p>
            </li>
          </ol>,
          <p>
            Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).
          </p>,
          <p>
            Here’s a link to 
            <a
              href="http://foo.bar"
            >
              a website
            </a>
            , to a 
            <a
              href="local-doc.html"
            >
              local doc
            </a>
            , and to a 
            <a
              href="#an-h2-header"
            >
              section heading in the current doc
            </a>
            . Here’s a footnote 
            <a
              href="#fn1"
              id="fnref1"
            >
              <sup>
                1
              </sup>
            </a>
            .
          </p>,
          <p>
            Tables can look like this:
          </p>,
          <table>
            <caption>
              Shoes, their sizes, and what they’re made of
            </caption>
            <thead>
              <tr>
                <th>
                  size
                </th>
                <th
                  align="left"
                >
                  material
                </th>
                <th
                  align="left"
                >
                  color
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  9
                </td>
                <td
                  align="left"
                >
                  leather
                </td>
                <td
                  align="left"
                >
                  brown
                </td>
              </tr>
              <tr>
                <td>
                  10
                </td>
                <td
                  align="left"
                >
                  hemp canvas
                </td>
                <td
                  align="left"
                >
                  natural
                </td>
              </tr>
              <tr>
                <td>
                  11
                </td>
                <td
                  align="left"
                >
                  glass
                </td>
                <td
                  align="left"
                >
                  transparent
                </td>
              </tr>
            </tbody>
          </table>,
          <p>
            (The above is the caption for the table.) Pandoc also supports multi-line tables:
          </p>,
          <p>
            Here’s a definition list:
          </p>,
          <dl>
            <dt>
              apples
            </dt>
            <dd>
              Good for making applesauce. oranges
            </dd>
            <dd>
              Citrus! tomatoes
            </dd>
            <dd>
              There’s no “e” in tomatoe.
            </dd>
          </dl>,
          <p>
            Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)
          </p>,
          <p>
            Here’s a “line block”:
          </p>,
          <p>
            Line one
            <br />
              Line too
            <br />
            Line tree
          </p>,
          <p>
            and images can be specified like so:
          </p>,
          <div>
            <img
              alt="example"
              src="example-image.jpg"
              title="An exemplary image"
            />
            <p>
              example image
            </p>
          </div>,
        ],
        "typeface": "arial",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "An h1 header",
            "id": "an-h1-header",
          },
          "ref": null,
          "rendered": "An h1 header",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Paragraphs are separated by a blank line.",
          },
          "ref": null,
          "rendered": "Paragraphs are separated by a blank line.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "2nd paragraph. ",
              <em>
                Italic
              </em>,
              ", ",
              <strong>
                bold
              </strong>,
              ", and ",
              <code>
                monospace
              </code>,
              ". Itemized lists look like:",
            ],
          },
          "ref": null,
          "rendered": Array [
            "2nd paragraph. ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Italic",
              },
              "ref": null,
              "rendered": "Italic",
              "type": "em",
            },
            ", ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "bold",
              },
              "ref": null,
              "rendered": "bold",
              "type": "strong",
            },
            ", and ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "monospace",
              },
              "ref": null,
              "rendered": "monospace",
              "type": "code",
            },
            ". Itemized lists look like:",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                this one
              </li>,
              <li>
                that one
              </li>,
              <li>
                the other one
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "this one",
              },
              "ref": null,
              "rendered": "this one",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "that one",
              },
              "ref": null,
              "rendered": "that one",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "the other one",
              },
              "ref": null,
              "rendered": "the other one",
              "type": "li",
            },
          ],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
          },
          "ref": null,
          "rendered": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Block quotes are written like so.
              </p>,
              <p>
                They can span multiple paragraphs, if you like.
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Block quotes are written like so.",
              },
              "ref": null,
              "rendered": "Block quotes are written like so.",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "They can span multiple paragraphs, if you like.",
              },
              "ref": null,
              "rendered": "They can span multiple paragraphs, if you like.",
              "type": "p",
            },
          ],
          "type": "blockquote",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
          },
          "ref": null,
          "rendered": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "An h2 header",
            "id": "an-h2-header",
          },
          "ref": null,
          "rendered": "An h2 header",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Here’s a numbered list:",
          },
          "ref": null,
          "rendered": "Here’s a numbered list:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                first item
              </li>,
              <li>
                second item
              </li>,
              <li>
                third item
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "first item",
              },
              "ref": null,
              "rendered": "first item",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "second item",
              },
              "ref": null,
              "rendered": "second item",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "third item",
              },
              "ref": null,
              "rendered": "third item",
              "type": "li",
            },
          ],
          "type": "ol",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
          },
          "ref": null,
          "rendered": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
          },
          "ref": null,
          "rendered": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
          },
          "ref": null,
          "rendered": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <pre>
              <code>
                <span>
                  import
                </span>
                 time
                <span>
                  # Quick, count to ten!
                </span>
                <span>
                  for
                </span>
                 i 
                <span>
                  in
                </span>
                 
                <span>
                  range
                </span>
                (
                <span>
                  10
                </span>
                ):
                <span>
                  # (but not *too* quick)
                </span>
                time.sleep(
                <span>
                  0.5
                </span>
                )
                <span>
                  print
                </span>
                 i
              </code>
            </pre>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <code>
                <span>
                  import
                </span>
                 time
                <span>
                  # Quick, count to ten!
                </span>
                <span>
                  for
                </span>
                 i 
                <span>
                  in
                </span>
                 
                <span>
                  range
                </span>
                (
                <span>
                  10
                </span>
                ):
                <span>
                  # (but not *too* quick)
                </span>
                time.sleep(
                <span>
                  0.5
                </span>
                )
                <span>
                  print
                </span>
                 i
              </code>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    import
                  </span>,
                  " time",
                  <span>
                    # Quick, count to ten!
                  </span>,
                  <span>
                    for
                  </span>,
                  " i ",
                  <span>
                    in
                  </span>,
                  " ",
                  <span>
                    range
                  </span>,
                  "(",
                  <span>
                    10
                  </span>,
                  "):",
                  <span>
                    # (but not *too* quick)
                  </span>,
                  "time.sleep(",
                  <span>
                    0.5
                  </span>,
                  ")",
                  <span>
                    print
                  </span>,
                  " i",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "import",
                  },
                  "ref": null,
                  "rendered": "import",
                  "type": "span",
                },
                " time",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "# Quick, count to ten!",
                  },
                  "ref": null,
                  "rendered": "# Quick, count to ten!",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "for",
                  },
                  "ref": null,
                  "rendered": "for",
                  "type": "span",
                },
                " i ",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "in",
                  },
                  "ref": null,
                  "rendered": "in",
                  "type": "span",
                },
                " ",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "range",
                  },
                  "ref": null,
                  "rendered": "range",
                  "type": "span",
                },
                "(",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "10",
                  },
                  "ref": null,
                  "rendered": "10",
                  "type": "span",
                },
                "):",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "# (but not *too* quick)",
                  },
                  "ref": null,
                  "rendered": "# (but not *too* quick)",
                  "type": "span",
                },
                "time.sleep(",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0.5",
                  },
                  "ref": null,
                  "rendered": "0.5",
                  "type": "span",
                },
                ")",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "print",
                  },
                  "ref": null,
                  "rendered": "print",
                  "type": "span",
                },
                " i",
              ],
              "type": "code",
            },
            "type": "pre",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "An h3 header",
            "id": "an-h3-header",
          },
          "ref": null,
          "rendered": "An h3 header",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Now a nested list:",
          },
          "ref": null,
          "rendered": "Now a nested list:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                <p>
                  First, get these ingredients:
                </p>
                <ul>
                  <li>
                    carrots
                  </li>
                  <li>
                    celery
                  </li>
                  <li>
                    lentils
                  </li>
                </ul>
              </li>,
              <li>
                <p>
                  Boil some water.
                </p>
              </li>,
              <li>
                <p>
                  Dump everything in the pot and follow this algorithm:
                </p>
                <pre>
                  <code>
                    find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                  </code>
                </pre>
                <p>
                  Do not bump wooden spoon or it will fall.
                </p>
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p>
                    First, get these ingredients:
                  </p>,
                  <ul>
                    <li>
                      carrots
                    </li>
                    <li>
                      celery
                    </li>
                    <li>
                      lentils
                    </li>
                  </ul>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "First, get these ingredients:",
                  },
                  "ref": null,
                  "rendered": "First, get these ingredients:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li>
                        carrots
                      </li>,
                      <li>
                        celery
                      </li>,
                      <li>
                        lentils
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "carrots",
                      },
                      "ref": null,
                      "rendered": "carrots",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "celery",
                      },
                      "ref": null,
                      "rendered": "celery",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "lentils",
                      },
                      "ref": null,
                      "rendered": "lentils",
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
              ],
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <p>
                  Boil some water.
                </p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Boil some water.",
                },
                "ref": null,
                "rendered": "Boil some water.",
                "type": "p",
              },
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p>
                    Dump everything in the pot and follow this algorithm:
                  </p>,
                  <pre>
                    <code>
                      find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                    </code>
                  </pre>,
                  <p>
                    Do not bump wooden spoon or it will fall.
                  </p>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Dump everything in the pot and follow this algorithm:",
                  },
                  "ref": null,
                  "rendered": "Dump everything in the pot and follow this algorithm:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": <code>
                      find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                    </code>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                    },
                    "ref": null,
                    "rendered": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                    "type": "code",
                  },
                  "type": "pre",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Do not bump wooden spoon or it will fall.",
                  },
                  "ref": null,
                  "rendered": "Do not bump wooden spoon or it will fall.",
                  "type": "p",
                },
              ],
              "type": "li",
            },
          ],
          "type": "ol",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
          },
          "ref": null,
          "rendered": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Here’s a link to ",
              <a
                href="http://foo.bar"
              >
                a website
              </a>,
              ", to a ",
              <a
                href="local-doc.html"
              >
                local doc
              </a>,
              ", and to a ",
              <a
                href="#an-h2-header"
              >
                section heading in the current doc
              </a>,
              ". Here’s a footnote ",
              <a
                href="#fn1"
                id="fnref1"
              >
                <sup>
                  1
                </sup>
              </a>,
              ".",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Here’s a link to ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "a website",
                "href": "http://foo.bar",
              },
              "ref": null,
              "rendered": "a website",
              "type": "a",
            },
            ", to a ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "local doc",
                "href": "local-doc.html",
              },
              "ref": null,
              "rendered": "local doc",
              "type": "a",
            },
            ", and to a ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "section heading in the current doc",
                "href": "#an-h2-header",
              },
              "ref": null,
              "rendered": "section heading in the current doc",
              "type": "a",
            },
            ". Here’s a footnote ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <sup>
                  1
                </sup>,
                "href": "#fn1",
                "id": "fnref1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "1",
                },
                "ref": null,
                "rendered": "1",
                "type": "sup",
              },
              "type": "a",
            },
            ".",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Tables can look like this:",
          },
          "ref": null,
          "rendered": "Tables can look like this:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <caption>
                Shoes, their sizes, and what they’re made of
              </caption>,
              <thead>
                <tr>
                  <th>
                    size
                  </th>
                  <th
                    align="left"
                  >
                    material
                  </th>
                  <th
                    align="left"
                  >
                    color
                  </th>
                </tr>
              </thead>,
              <tbody>
                <tr>
                  <td>
                    9
                  </td>
                  <td
                    align="left"
                  >
                    leather
                  </td>
                  <td
                    align="left"
                  >
                    brown
                  </td>
                </tr>
                <tr>
                  <td>
                    10
                  </td>
                  <td
                    align="left"
                  >
                    hemp canvas
                  </td>
                  <td
                    align="left"
                  >
                    natural
                  </td>
                </tr>
                <tr>
                  <td>
                    11
                  </td>
                  <td
                    align="left"
                  >
                    glass
                  </td>
                  <td
                    align="left"
                  >
                    transparent
                  </td>
                </tr>
              </tbody>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Shoes, their sizes, and what they’re made of",
              },
              "ref": null,
              "rendered": "Shoes, their sizes, and what they’re made of",
              "type": "caption",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <th>
                    size
                  </th>
                  <th
                    align="left"
                  >
                    material
                  </th>
                  <th
                    align="left"
                  >
                    color
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      size
                    </th>,
                    <th
                      align="left"
                    >
                      material
                    </th>,
                    <th
                      align="left"
                    >
                      color
                    </th>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "size",
                    },
                    "ref": null,
                    "rendered": "size",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "material",
                    },
                    "ref": null,
                    "rendered": "material",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "color",
                    },
                    "ref": null,
                    "rendered": "color",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <tr>
                    <td>
                      9
                    </td>
                    <td
                      align="left"
                    >
                      leather
                    </td>
                    <td
                      align="left"
                    >
                      brown
                    </td>
                  </tr>,
                  <tr>
                    <td>
                      10
                    </td>
                    <td
                      align="left"
                    >
                      hemp canvas
                    </td>
                    <td
                      align="left"
                    >
                      natural
                    </td>
                  </tr>,
                  <tr>
                    <td>
                      11
                    </td>
                    <td
                      align="left"
                    >
                      glass
                    </td>
                    <td
                      align="left"
                    >
                      transparent
                    </td>
                  </tr>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <td>
                        9
                      </td>,
                      <td
                        align="left"
                      >
                        leather
                      </td>,
                      <td
                        align="left"
                      >
                        brown
                      </td>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "9",
                      },
                      "ref": null,
                      "rendered": "9",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "leather",
                      },
                      "ref": null,
                      "rendered": "leather",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "brown",
                      },
                      "ref": null,
                      "rendered": "brown",
                      "type": "td",
                    },
                  ],
                  "type": "tr",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <td>
                        10
                      </td>,
                      <td
                        align="left"
                      >
                        hemp canvas
                      </td>,
                      <td
                        align="left"
                      >
                        natural
                      </td>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "10",
                      },
                      "ref": null,
                      "rendered": "10",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "hemp canvas",
                      },
                      "ref": null,
                      "rendered": "hemp canvas",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "natural",
                      },
                      "ref": null,
                      "rendered": "natural",
                      "type": "td",
                    },
                  ],
                  "type": "tr",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <td>
                        11
                      </td>,
                      <td
                        align="left"
                      >
                        glass
                      </td>,
                      <td
                        align="left"
                      >
                        transparent
                      </td>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "11",
                      },
                      "ref": null,
                      "rendered": "11",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "glass",
                      },
                      "ref": null,
                      "rendered": "glass",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "transparent",
                      },
                      "ref": null,
                      "rendered": "transparent",
                      "type": "td",
                    },
                  ],
                  "type": "tr",
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
          },
          "ref": null,
          "rendered": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Here’s a definition list:",
          },
          "ref": null,
          "rendered": "Here’s a definition list:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <dt>
                apples
              </dt>,
              <dd>
                Good for making applesauce. oranges
              </dd>,
              <dd>
                Citrus! tomatoes
              </dd>,
              <dd>
                There’s no “e” in tomatoe.
              </dd>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "apples",
              },
              "ref": null,
              "rendered": "apples",
              "type": "dt",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Good for making applesauce. oranges",
              },
              "ref": null,
              "rendered": "Good for making applesauce. oranges",
              "type": "dd",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Citrus! tomatoes",
              },
              "ref": null,
              "rendered": "Citrus! tomatoes",
              "type": "dd",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "There’s no “e” in tomatoe.",
              },
              "ref": null,
              "rendered": "There’s no “e” in tomatoe.",
              "type": "dd",
            },
          ],
          "type": "dl",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
          },
          "ref": null,
          "rendered": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Here’s a “line block”:",
          },
          "ref": null,
          "rendered": "Here’s a “line block”:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Line one",
              <br />,
              "  Line too",
              <br />,
              "Line tree",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Line one",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "  Line too",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "Line tree",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "and images can be specified like so:",
          },
          "ref": null,
          "rendered": "and images can be specified like so:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="example"
                src="example-image.jpg"
                title="An exemplary image"
              />,
              <p>
                example image
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "alt": "example",
                "src": "example-image.jpg",
                "title": "An exemplary image",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "example image",
              },
              "ref": null,
              "rendered": "example image",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<Comparator/> renders with a custom default font 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ComparatorJSX
    typeface="Cambria"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <h1
          id="an-h1-header"
        >
          An h1 header
        </h1>,
        <p>
          Paragraphs are separated by a blank line.
        </p>,
        <p>
          2nd paragraph. 
          <em>
            Italic
          </em>
          , 
          <strong>
            bold
          </strong>
          , and 
          <code>
            monospace
          </code>
          . Itemized lists look like:
        </p>,
        <ul>
          <li>
            this one
          </li>
          <li>
            that one
          </li>
          <li>
            the other one
          </li>
        </ul>,
        <p>
          Note that — not considering the asterisk — the actual text content starts at 4-columns in.
        </p>,
        <blockquote>
          <p>
            Block quotes are written like so.
          </p>
          <p>
            They can span multiple paragraphs, if you like.
          </p>
        </blockquote>,
        <p>
          Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺
        </p>,
        <h2
          id="an-h2-header"
        >
          An h2 header
        </h2>,
        <p>
          Here’s a numbered list:
        </p>,
        <ol>
          <li>
            first item
          </li>
          <li>
            second item
          </li>
          <li>
            third item
          </li>
        </ol>,
        <p>
          Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:
        </p>,
        <p>
          As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:
        </p>,
        <p>
          (which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:
        </p>,
        <div>
          <pre>
            <code>
              <span>
                import
              </span>
               time
              <span>
                # Quick, count to ten!
              </span>
              <span>
                for
              </span>
               i 
              <span>
                in
              </span>
               
              <span>
                range
              </span>
              (
              <span>
                10
              </span>
              ):
              <span>
                # (but not *too* quick)
              </span>
              time.sleep(
              <span>
                0.5
              </span>
              )
              <span>
                print
              </span>
               i
            </code>
          </pre>
        </div>,
        <h3
          id="an-h3-header"
        >
          An h3 header
        </h3>,
        <p>
          Now a nested list:
        </p>,
        <ol>
          <li>
            <p>
              First, get these ingredients:
            </p>
            <ul>
              <li>
                carrots
              </li>
              <li>
                celery
              </li>
              <li>
                lentils
              </li>
            </ul>
          </li>
          <li>
            <p>
              Boil some water.
            </p>
          </li>
          <li>
            <p>
              Dump everything in the pot and follow this algorithm:
            </p>
            <pre>
              <code>
                find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
              </code>
            </pre>
            <p>
              Do not bump wooden spoon or it will fall.
            </p>
          </li>
        </ol>,
        <p>
          Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).
        </p>,
        <p>
          Here’s a link to 
          <a
            href="http://foo.bar"
          >
            a website
          </a>
          , to a 
          <a
            href="local-doc.html"
          >
            local doc
          </a>
          , and to a 
          <a
            href="#an-h2-header"
          >
            section heading in the current doc
          </a>
          . Here’s a footnote 
          <a
            href="#fn1"
            id="fnref1"
          >
            <sup>
              1
            </sup>
          </a>
          .
        </p>,
        <p>
          Tables can look like this:
        </p>,
        <table>
          <caption>
            Shoes, their sizes, and what they’re made of
          </caption>
          <thead>
            <tr>
              <th>
                size
              </th>
              <th
                align="left"
              >
                material
              </th>
              <th
                align="left"
              >
                color
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                9
              </td>
              <td
                align="left"
              >
                leather
              </td>
              <td
                align="left"
              >
                brown
              </td>
            </tr>
            <tr>
              <td>
                10
              </td>
              <td
                align="left"
              >
                hemp canvas
              </td>
              <td
                align="left"
              >
                natural
              </td>
            </tr>
            <tr>
              <td>
                11
              </td>
              <td
                align="left"
              >
                glass
              </td>
              <td
                align="left"
              >
                transparent
              </td>
            </tr>
          </tbody>
        </table>,
        <p>
          (The above is the caption for the table.) Pandoc also supports multi-line tables:
        </p>,
        <p>
          Here’s a definition list:
        </p>,
        <dl>
          <dt>
            apples
          </dt>
          <dd>
            Good for making applesauce. oranges
          </dd>
          <dd>
            Citrus! tomatoes
          </dd>
          <dd>
            There’s no “e” in tomatoe.
          </dd>
        </dl>,
        <p>
          Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)
        </p>,
        <p>
          Here’s a “line block”:
        </p>,
        <p>
          Line one
          <br />
            Line too
          <br />
          Line tree
        </p>,
        <p>
          and images can be specified like so:
        </p>,
        <div>
          <img
            alt="example"
            src="example-image.jpg"
            title="An exemplary image"
          />
          <p>
            example image
          </p>
        </div>,
      ],
      "typeface": "Cambria",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "An h1 header",
          "id": "an-h1-header",
        },
        "ref": null,
        "rendered": "An h1 header",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Paragraphs are separated by a blank line.",
        },
        "ref": null,
        "rendered": "Paragraphs are separated by a blank line.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "2nd paragraph. ",
            <em>
              Italic
            </em>,
            ", ",
            <strong>
              bold
            </strong>,
            ", and ",
            <code>
              monospace
            </code>,
            ". Itemized lists look like:",
          ],
        },
        "ref": null,
        "rendered": Array [
          "2nd paragraph. ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Italic",
            },
            "ref": null,
            "rendered": "Italic",
            "type": "em",
          },
          ", ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "bold",
            },
            "ref": null,
            "rendered": "bold",
            "type": "strong",
          },
          ", and ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "monospace",
            },
            "ref": null,
            "rendered": "monospace",
            "type": "code",
          },
          ". Itemized lists look like:",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              this one
            </li>,
            <li>
              that one
            </li>,
            <li>
              the other one
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "this one",
            },
            "ref": null,
            "rendered": "this one",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "that one",
            },
            "ref": null,
            "rendered": "that one",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "the other one",
            },
            "ref": null,
            "rendered": "the other one",
            "type": "li",
          },
        ],
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
        },
        "ref": null,
        "rendered": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              Block quotes are written like so.
            </p>,
            <p>
              They can span multiple paragraphs, if you like.
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Block quotes are written like so.",
            },
            "ref": null,
            "rendered": "Block quotes are written like so.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "They can span multiple paragraphs, if you like.",
            },
            "ref": null,
            "rendered": "They can span multiple paragraphs, if you like.",
            "type": "p",
          },
        ],
        "type": "blockquote",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
        },
        "ref": null,
        "rendered": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "An h2 header",
          "id": "an-h2-header",
        },
        "ref": null,
        "rendered": "An h2 header",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Here’s a numbered list:",
        },
        "ref": null,
        "rendered": "Here’s a numbered list:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              first item
            </li>,
            <li>
              second item
            </li>,
            <li>
              third item
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "first item",
            },
            "ref": null,
            "rendered": "first item",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "second item",
            },
            "ref": null,
            "rendered": "second item",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "third item",
            },
            "ref": null,
            "rendered": "third item",
            "type": "li",
          },
        ],
        "type": "ol",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
        },
        "ref": null,
        "rendered": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
        },
        "ref": null,
        "rendered": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
        },
        "ref": null,
        "rendered": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <pre>
            <code>
              <span>
                import
              </span>
               time
              <span>
                # Quick, count to ten!
              </span>
              <span>
                for
              </span>
               i 
              <span>
                in
              </span>
               
              <span>
                range
              </span>
              (
              <span>
                10
              </span>
              ):
              <span>
                # (but not *too* quick)
              </span>
              time.sleep(
              <span>
                0.5
              </span>
              )
              <span>
                print
              </span>
               i
            </code>
          </pre>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <code>
              <span>
                import
              </span>
               time
              <span>
                # Quick, count to ten!
              </span>
              <span>
                for
              </span>
               i 
              <span>
                in
              </span>
               
              <span>
                range
              </span>
              (
              <span>
                10
              </span>
              ):
              <span>
                # (but not *too* quick)
              </span>
              time.sleep(
              <span>
                0.5
              </span>
              )
              <span>
                print
              </span>
               i
            </code>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span>
                  import
                </span>,
                " time",
                <span>
                  # Quick, count to ten!
                </span>,
                <span>
                  for
                </span>,
                " i ",
                <span>
                  in
                </span>,
                " ",
                <span>
                  range
                </span>,
                "(",
                <span>
                  10
                </span>,
                "):",
                <span>
                  # (but not *too* quick)
                </span>,
                "time.sleep(",
                <span>
                  0.5
                </span>,
                ")",
                <span>
                  print
                </span>,
                " i",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "import",
                },
                "ref": null,
                "rendered": "import",
                "type": "span",
              },
              " time",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "# Quick, count to ten!",
                },
                "ref": null,
                "rendered": "# Quick, count to ten!",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "for",
                },
                "ref": null,
                "rendered": "for",
                "type": "span",
              },
              " i ",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "in",
                },
                "ref": null,
                "rendered": "in",
                "type": "span",
              },
              " ",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "range",
                },
                "ref": null,
                "rendered": "range",
                "type": "span",
              },
              "(",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "10",
                },
                "ref": null,
                "rendered": "10",
                "type": "span",
              },
              "):",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "# (but not *too* quick)",
                },
                "ref": null,
                "rendered": "# (but not *too* quick)",
                "type": "span",
              },
              "time.sleep(",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "0.5",
                },
                "ref": null,
                "rendered": "0.5",
                "type": "span",
              },
              ")",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "print",
                },
                "ref": null,
                "rendered": "print",
                "type": "span",
              },
              " i",
            ],
            "type": "code",
          },
          "type": "pre",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "An h3 header",
          "id": "an-h3-header",
        },
        "ref": null,
        "rendered": "An h3 header",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Now a nested list:",
        },
        "ref": null,
        "rendered": "Now a nested list:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <p>
                First, get these ingredients:
              </p>
              <ul>
                <li>
                  carrots
                </li>
                <li>
                  celery
                </li>
                <li>
                  lentils
                </li>
              </ul>
            </li>,
            <li>
              <p>
                Boil some water.
              </p>
            </li>,
            <li>
              <p>
                Dump everything in the pot and follow this algorithm:
              </p>
              <pre>
                <code>
                  find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                </code>
              </pre>
              <p>
                Do not bump wooden spoon or it will fall.
              </p>
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  First, get these ingredients:
                </p>,
                <ul>
                  <li>
                    carrots
                  </li>
                  <li>
                    celery
                  </li>
                  <li>
                    lentils
                  </li>
                </ul>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "First, get these ingredients:",
                },
                "ref": null,
                "rendered": "First, get these ingredients:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li>
                      carrots
                    </li>,
                    <li>
                      celery
                    </li>,
                    <li>
                      lentils
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "carrots",
                    },
                    "ref": null,
                    "rendered": "carrots",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "celery",
                    },
                    "ref": null,
                    "rendered": "celery",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "lentils",
                    },
                    "ref": null,
                    "rendered": "lentils",
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <p>
                Boil some water.
              </p>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Boil some water.",
              },
              "ref": null,
              "rendered": "Boil some water.",
              "type": "p",
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Dump everything in the pot and follow this algorithm:
                </p>,
                <pre>
                  <code>
                    find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                  </code>
                </pre>,
                <p>
                  Do not bump wooden spoon or it will fall.
                </p>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Dump everything in the pot and follow this algorithm:",
                },
                "ref": null,
                "rendered": "Dump everything in the pot and follow this algorithm:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <code>
                    find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                  </code>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                  },
                  "ref": null,
                  "rendered": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                  "type": "code",
                },
                "type": "pre",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Do not bump wooden spoon or it will fall.",
                },
                "ref": null,
                "rendered": "Do not bump wooden spoon or it will fall.",
                "type": "p",
              },
            ],
            "type": "li",
          },
        ],
        "type": "ol",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
        },
        "ref": null,
        "rendered": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Here’s a link to ",
            <a
              href="http://foo.bar"
            >
              a website
            </a>,
            ", to a ",
            <a
              href="local-doc.html"
            >
              local doc
            </a>,
            ", and to a ",
            <a
              href="#an-h2-header"
            >
              section heading in the current doc
            </a>,
            ". Here’s a footnote ",
            <a
              href="#fn1"
              id="fnref1"
            >
              <sup>
                1
              </sup>
            </a>,
            ".",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Here’s a link to ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "a website",
              "href": "http://foo.bar",
            },
            "ref": null,
            "rendered": "a website",
            "type": "a",
          },
          ", to a ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "local doc",
              "href": "local-doc.html",
            },
            "ref": null,
            "rendered": "local doc",
            "type": "a",
          },
          ", and to a ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "section heading in the current doc",
              "href": "#an-h2-header",
            },
            "ref": null,
            "rendered": "section heading in the current doc",
            "type": "a",
          },
          ". Here’s a footnote ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <sup>
                1
              </sup>,
              "href": "#fn1",
              "id": "fnref1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "1",
              },
              "ref": null,
              "rendered": "1",
              "type": "sup",
            },
            "type": "a",
          },
          ".",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Tables can look like this:",
        },
        "ref": null,
        "rendered": "Tables can look like this:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <caption>
              Shoes, their sizes, and what they’re made of
            </caption>,
            <thead>
              <tr>
                <th>
                  size
                </th>
                <th
                  align="left"
                >
                  material
                </th>
                <th
                  align="left"
                >
                  color
                </th>
              </tr>
            </thead>,
            <tbody>
              <tr>
                <td>
                  9
                </td>
                <td
                  align="left"
                >
                  leather
                </td>
                <td
                  align="left"
                >
                  brown
                </td>
              </tr>
              <tr>
                <td>
                  10
                </td>
                <td
                  align="left"
                >
                  hemp canvas
                </td>
                <td
                  align="left"
                >
                  natural
                </td>
              </tr>
              <tr>
                <td>
                  11
                </td>
                <td
                  align="left"
                >
                  glass
                </td>
                <td
                  align="left"
                >
                  transparent
                </td>
              </tr>
            </tbody>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Shoes, their sizes, and what they’re made of",
            },
            "ref": null,
            "rendered": "Shoes, their sizes, and what they’re made of",
            "type": "caption",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <th>
                  size
                </th>
                <th
                  align="left"
                >
                  material
                </th>
                <th
                  align="left"
                >
                  color
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    size
                  </th>,
                  <th
                    align="left"
                  >
                    material
                  </th>,
                  <th
                    align="left"
                  >
                    color
                  </th>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "size",
                  },
                  "ref": null,
                  "rendered": "size",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "align": "left",
                    "children": "material",
                  },
                  "ref": null,
                  "rendered": "material",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "align": "left",
                    "children": "color",
                  },
                  "ref": null,
                  "rendered": "color",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr>
                  <td>
                    9
                  </td>
                  <td
                    align="left"
                  >
                    leather
                  </td>
                  <td
                    align="left"
                  >
                    brown
                  </td>
                </tr>,
                <tr>
                  <td>
                    10
                  </td>
                  <td
                    align="left"
                  >
                    hemp canvas
                  </td>
                  <td
                    align="left"
                  >
                    natural
                  </td>
                </tr>,
                <tr>
                  <td>
                    11
                  </td>
                  <td
                    align="left"
                  >
                    glass
                  </td>
                  <td
                    align="left"
                  >
                    transparent
                  </td>
                </tr>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      9
                    </td>,
                    <td
                      align="left"
                    >
                      leather
                    </td>,
                    <td
                      align="left"
                    >
                      brown
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "9",
                    },
                    "ref": null,
                    "rendered": "9",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "leather",
                    },
                    "ref": null,
                    "rendered": "leather",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "brown",
                    },
                    "ref": null,
                    "rendered": "brown",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      10
                    </td>,
                    <td
                      align="left"
                    >
                      hemp canvas
                    </td>,
                    <td
                      align="left"
                    >
                      natural
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "10",
                    },
                    "ref": null,
                    "rendered": "10",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "hemp canvas",
                    },
                    "ref": null,
                    "rendered": "hemp canvas",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "natural",
                    },
                    "ref": null,
                    "rendered": "natural",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      11
                    </td>,
                    <td
                      align="left"
                    >
                      glass
                    </td>,
                    <td
                      align="left"
                    >
                      transparent
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "11",
                    },
                    "ref": null,
                    "rendered": "11",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "glass",
                    },
                    "ref": null,
                    "rendered": "glass",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "transparent",
                    },
                    "ref": null,
                    "rendered": "transparent",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
        },
        "ref": null,
        "rendered": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Here’s a definition list:",
        },
        "ref": null,
        "rendered": "Here’s a definition list:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <dt>
              apples
            </dt>,
            <dd>
              Good for making applesauce. oranges
            </dd>,
            <dd>
              Citrus! tomatoes
            </dd>,
            <dd>
              There’s no “e” in tomatoe.
            </dd>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "apples",
            },
            "ref": null,
            "rendered": "apples",
            "type": "dt",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Good for making applesauce. oranges",
            },
            "ref": null,
            "rendered": "Good for making applesauce. oranges",
            "type": "dd",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Citrus! tomatoes",
            },
            "ref": null,
            "rendered": "Citrus! tomatoes",
            "type": "dd",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "There’s no “e” in tomatoe.",
            },
            "ref": null,
            "rendered": "There’s no “e” in tomatoe.",
            "type": "dd",
          },
        ],
        "type": "dl",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
        },
        "ref": null,
        "rendered": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Here’s a “line block”:",
        },
        "ref": null,
        "rendered": "Here’s a “line block”:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Line one",
            <br />,
            "  Line too",
            <br />,
            "Line tree",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Line one",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "  Line too",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "Line tree",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "and images can be specified like so:",
        },
        "ref": null,
        "rendered": "and images can be specified like so:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="example"
              src="example-image.jpg"
              title="An exemplary image"
            />,
            <p>
              example image
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "alt": "example",
              "src": "example-image.jpg",
              "title": "An exemplary image",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "example image",
            },
            "ref": null,
            "rendered": "example image",
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <h1
            id="an-h1-header"
          >
            An h1 header
          </h1>,
          <p>
            Paragraphs are separated by a blank line.
          </p>,
          <p>
            2nd paragraph. 
            <em>
              Italic
            </em>
            , 
            <strong>
              bold
            </strong>
            , and 
            <code>
              monospace
            </code>
            . Itemized lists look like:
          </p>,
          <ul>
            <li>
              this one
            </li>
            <li>
              that one
            </li>
            <li>
              the other one
            </li>
          </ul>,
          <p>
            Note that — not considering the asterisk — the actual text content starts at 4-columns in.
          </p>,
          <blockquote>
            <p>
              Block quotes are written like so.
            </p>
            <p>
              They can span multiple paragraphs, if you like.
            </p>
          </blockquote>,
          <p>
            Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺
          </p>,
          <h2
            id="an-h2-header"
          >
            An h2 header
          </h2>,
          <p>
            Here’s a numbered list:
          </p>,
          <ol>
            <li>
              first item
            </li>
            <li>
              second item
            </li>
            <li>
              third item
            </li>
          </ol>,
          <p>
            Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:
          </p>,
          <p>
            As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:
          </p>,
          <p>
            (which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:
          </p>,
          <div>
            <pre>
              <code>
                <span>
                  import
                </span>
                 time
                <span>
                  # Quick, count to ten!
                </span>
                <span>
                  for
                </span>
                 i 
                <span>
                  in
                </span>
                 
                <span>
                  range
                </span>
                (
                <span>
                  10
                </span>
                ):
                <span>
                  # (but not *too* quick)
                </span>
                time.sleep(
                <span>
                  0.5
                </span>
                )
                <span>
                  print
                </span>
                 i
              </code>
            </pre>
          </div>,
          <h3
            id="an-h3-header"
          >
            An h3 header
          </h3>,
          <p>
            Now a nested list:
          </p>,
          <ol>
            <li>
              <p>
                First, get these ingredients:
              </p>
              <ul>
                <li>
                  carrots
                </li>
                <li>
                  celery
                </li>
                <li>
                  lentils
                </li>
              </ul>
            </li>
            <li>
              <p>
                Boil some water.
              </p>
            </li>
            <li>
              <p>
                Dump everything in the pot and follow this algorithm:
              </p>
              <pre>
                <code>
                  find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                </code>
              </pre>
              <p>
                Do not bump wooden spoon or it will fall.
              </p>
            </li>
          </ol>,
          <p>
            Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).
          </p>,
          <p>
            Here’s a link to 
            <a
              href="http://foo.bar"
            >
              a website
            </a>
            , to a 
            <a
              href="local-doc.html"
            >
              local doc
            </a>
            , and to a 
            <a
              href="#an-h2-header"
            >
              section heading in the current doc
            </a>
            . Here’s a footnote 
            <a
              href="#fn1"
              id="fnref1"
            >
              <sup>
                1
              </sup>
            </a>
            .
          </p>,
          <p>
            Tables can look like this:
          </p>,
          <table>
            <caption>
              Shoes, their sizes, and what they’re made of
            </caption>
            <thead>
              <tr>
                <th>
                  size
                </th>
                <th
                  align="left"
                >
                  material
                </th>
                <th
                  align="left"
                >
                  color
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  9
                </td>
                <td
                  align="left"
                >
                  leather
                </td>
                <td
                  align="left"
                >
                  brown
                </td>
              </tr>
              <tr>
                <td>
                  10
                </td>
                <td
                  align="left"
                >
                  hemp canvas
                </td>
                <td
                  align="left"
                >
                  natural
                </td>
              </tr>
              <tr>
                <td>
                  11
                </td>
                <td
                  align="left"
                >
                  glass
                </td>
                <td
                  align="left"
                >
                  transparent
                </td>
              </tr>
            </tbody>
          </table>,
          <p>
            (The above is the caption for the table.) Pandoc also supports multi-line tables:
          </p>,
          <p>
            Here’s a definition list:
          </p>,
          <dl>
            <dt>
              apples
            </dt>
            <dd>
              Good for making applesauce. oranges
            </dd>
            <dd>
              Citrus! tomatoes
            </dd>
            <dd>
              There’s no “e” in tomatoe.
            </dd>
          </dl>,
          <p>
            Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)
          </p>,
          <p>
            Here’s a “line block”:
          </p>,
          <p>
            Line one
            <br />
              Line too
            <br />
            Line tree
          </p>,
          <p>
            and images can be specified like so:
          </p>,
          <div>
            <img
              alt="example"
              src="example-image.jpg"
              title="An exemplary image"
            />
            <p>
              example image
            </p>
          </div>,
        ],
        "typeface": "Cambria",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "An h1 header",
            "id": "an-h1-header",
          },
          "ref": null,
          "rendered": "An h1 header",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Paragraphs are separated by a blank line.",
          },
          "ref": null,
          "rendered": "Paragraphs are separated by a blank line.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "2nd paragraph. ",
              <em>
                Italic
              </em>,
              ", ",
              <strong>
                bold
              </strong>,
              ", and ",
              <code>
                monospace
              </code>,
              ". Itemized lists look like:",
            ],
          },
          "ref": null,
          "rendered": Array [
            "2nd paragraph. ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Italic",
              },
              "ref": null,
              "rendered": "Italic",
              "type": "em",
            },
            ", ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "bold",
              },
              "ref": null,
              "rendered": "bold",
              "type": "strong",
            },
            ", and ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "monospace",
              },
              "ref": null,
              "rendered": "monospace",
              "type": "code",
            },
            ". Itemized lists look like:",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                this one
              </li>,
              <li>
                that one
              </li>,
              <li>
                the other one
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "this one",
              },
              "ref": null,
              "rendered": "this one",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "that one",
              },
              "ref": null,
              "rendered": "that one",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "the other one",
              },
              "ref": null,
              "rendered": "the other one",
              "type": "li",
            },
          ],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
          },
          "ref": null,
          "rendered": "Note that — not considering the asterisk — the actual text content starts at 4-columns in.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Block quotes are written like so.
              </p>,
              <p>
                They can span multiple paragraphs, if you like.
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Block quotes are written like so.",
              },
              "ref": null,
              "rendered": "Block quotes are written like so.",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "They can span multiple paragraphs, if you like.",
              },
              "ref": null,
              "rendered": "They can span multiple paragraphs, if you like.",
              "type": "p",
            },
          ],
          "type": "blockquote",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
          },
          "ref": null,
          "rendered": "Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all in chapters 12–14”). Three dots … will be converted to an ellipsis. Unicode is supported. ☺",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "An h2 header",
            "id": "an-h2-header",
          },
          "ref": null,
          "rendered": "An h2 header",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Here’s a numbered list:",
          },
          "ref": null,
          "rendered": "Here’s a numbered list:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                first item
              </li>,
              <li>
                second item
              </li>,
              <li>
                third item
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "first item",
              },
              "ref": null,
              "rendered": "first item",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "second item",
              },
              "ref": null,
              "rendered": "second item",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "third item",
              },
              "ref": null,
              "rendered": "third item",
              "type": "li",
            },
          ],
          "type": "ol",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
          },
          "ref": null,
          "rendered": "Note again how the actual text starts at 4 columns in (4 characters from the left side). Here’s a code sample:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
          },
          "ref": null,
          "rendered": "As you probably guessed, indented 4 spaces. By the way, instead of indenting the block, you can use delimited blocks, if you like:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
          },
          "ref": null,
          "rendered": "(which makes copying & pasting easier). You can optionally mark the delimited block for Pandoc to syntax highlight it:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <pre>
              <code>
                <span>
                  import
                </span>
                 time
                <span>
                  # Quick, count to ten!
                </span>
                <span>
                  for
                </span>
                 i 
                <span>
                  in
                </span>
                 
                <span>
                  range
                </span>
                (
                <span>
                  10
                </span>
                ):
                <span>
                  # (but not *too* quick)
                </span>
                time.sleep(
                <span>
                  0.5
                </span>
                )
                <span>
                  print
                </span>
                 i
              </code>
            </pre>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <code>
                <span>
                  import
                </span>
                 time
                <span>
                  # Quick, count to ten!
                </span>
                <span>
                  for
                </span>
                 i 
                <span>
                  in
                </span>
                 
                <span>
                  range
                </span>
                (
                <span>
                  10
                </span>
                ):
                <span>
                  # (but not *too* quick)
                </span>
                time.sleep(
                <span>
                  0.5
                </span>
                )
                <span>
                  print
                </span>
                 i
              </code>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    import
                  </span>,
                  " time",
                  <span>
                    # Quick, count to ten!
                  </span>,
                  <span>
                    for
                  </span>,
                  " i ",
                  <span>
                    in
                  </span>,
                  " ",
                  <span>
                    range
                  </span>,
                  "(",
                  <span>
                    10
                  </span>,
                  "):",
                  <span>
                    # (but not *too* quick)
                  </span>,
                  "time.sleep(",
                  <span>
                    0.5
                  </span>,
                  ")",
                  <span>
                    print
                  </span>,
                  " i",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "import",
                  },
                  "ref": null,
                  "rendered": "import",
                  "type": "span",
                },
                " time",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "# Quick, count to ten!",
                  },
                  "ref": null,
                  "rendered": "# Quick, count to ten!",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "for",
                  },
                  "ref": null,
                  "rendered": "for",
                  "type": "span",
                },
                " i ",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "in",
                  },
                  "ref": null,
                  "rendered": "in",
                  "type": "span",
                },
                " ",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "range",
                  },
                  "ref": null,
                  "rendered": "range",
                  "type": "span",
                },
                "(",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "10",
                  },
                  "ref": null,
                  "rendered": "10",
                  "type": "span",
                },
                "):",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "# (but not *too* quick)",
                  },
                  "ref": null,
                  "rendered": "# (but not *too* quick)",
                  "type": "span",
                },
                "time.sleep(",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0.5",
                  },
                  "ref": null,
                  "rendered": "0.5",
                  "type": "span",
                },
                ")",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "print",
                  },
                  "ref": null,
                  "rendered": "print",
                  "type": "span",
                },
                " i",
              ],
              "type": "code",
            },
            "type": "pre",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "An h3 header",
            "id": "an-h3-header",
          },
          "ref": null,
          "rendered": "An h3 header",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Now a nested list:",
          },
          "ref": null,
          "rendered": "Now a nested list:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                <p>
                  First, get these ingredients:
                </p>
                <ul>
                  <li>
                    carrots
                  </li>
                  <li>
                    celery
                  </li>
                  <li>
                    lentils
                  </li>
                </ul>
              </li>,
              <li>
                <p>
                  Boil some water.
                </p>
              </li>,
              <li>
                <p>
                  Dump everything in the pot and follow this algorithm:
                </p>
                <pre>
                  <code>
                    find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                  </code>
                </pre>
                <p>
                  Do not bump wooden spoon or it will fall.
                </p>
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p>
                    First, get these ingredients:
                  </p>,
                  <ul>
                    <li>
                      carrots
                    </li>
                    <li>
                      celery
                    </li>
                    <li>
                      lentils
                    </li>
                  </ul>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "First, get these ingredients:",
                  },
                  "ref": null,
                  "rendered": "First, get these ingredients:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li>
                        carrots
                      </li>,
                      <li>
                        celery
                      </li>,
                      <li>
                        lentils
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "carrots",
                      },
                      "ref": null,
                      "rendered": "carrots",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "celery",
                      },
                      "ref": null,
                      "rendered": "celery",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "lentils",
                      },
                      "ref": null,
                      "rendered": "lentils",
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
              ],
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <p>
                  Boil some water.
                </p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Boil some water.",
                },
                "ref": null,
                "rendered": "Boil some water.",
                "type": "p",
              },
              "type": "li",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p>
                    Dump everything in the pot and follow this algorithm:
                  </p>,
                  <pre>
                    <code>
                      find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                    </code>
                  </pre>,
                  <p>
                    Do not bump wooden spoon or it will fall.
                  </p>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Dump everything in the pot and follow this algorithm:",
                  },
                  "ref": null,
                  "rendered": "Dump everything in the pot and follow this algorithm:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": <code>
                      find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)
                    </code>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                    },
                    "ref": null,
                    "rendered": "find wooden spoon uncover pot stir cover pot balance wooden spoon precariously on pot handle wait 10 minutes goto first step (or shut off burner when done)",
                    "type": "code",
                  },
                  "type": "pre",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Do not bump wooden spoon or it will fall.",
                  },
                  "ref": null,
                  "rendered": "Do not bump wooden spoon or it will fall.",
                  "type": "p",
                },
              ],
              "type": "li",
            },
          ],
          "type": "ol",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
          },
          "ref": null,
          "rendered": "Notice again how text always lines up on 4-space indents (including that last line which continues item 3 above).",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Here’s a link to ",
              <a
                href="http://foo.bar"
              >
                a website
              </a>,
              ", to a ",
              <a
                href="local-doc.html"
              >
                local doc
              </a>,
              ", and to a ",
              <a
                href="#an-h2-header"
              >
                section heading in the current doc
              </a>,
              ". Here’s a footnote ",
              <a
                href="#fn1"
                id="fnref1"
              >
                <sup>
                  1
                </sup>
              </a>,
              ".",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Here’s a link to ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "a website",
                "href": "http://foo.bar",
              },
              "ref": null,
              "rendered": "a website",
              "type": "a",
            },
            ", to a ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "local doc",
                "href": "local-doc.html",
              },
              "ref": null,
              "rendered": "local doc",
              "type": "a",
            },
            ", and to a ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "section heading in the current doc",
                "href": "#an-h2-header",
              },
              "ref": null,
              "rendered": "section heading in the current doc",
              "type": "a",
            },
            ". Here’s a footnote ",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <sup>
                  1
                </sup>,
                "href": "#fn1",
                "id": "fnref1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "1",
                },
                "ref": null,
                "rendered": "1",
                "type": "sup",
              },
              "type": "a",
            },
            ".",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Tables can look like this:",
          },
          "ref": null,
          "rendered": "Tables can look like this:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <caption>
                Shoes, their sizes, and what they’re made of
              </caption>,
              <thead>
                <tr>
                  <th>
                    size
                  </th>
                  <th
                    align="left"
                  >
                    material
                  </th>
                  <th
                    align="left"
                  >
                    color
                  </th>
                </tr>
              </thead>,
              <tbody>
                <tr>
                  <td>
                    9
                  </td>
                  <td
                    align="left"
                  >
                    leather
                  </td>
                  <td
                    align="left"
                  >
                    brown
                  </td>
                </tr>
                <tr>
                  <td>
                    10
                  </td>
                  <td
                    align="left"
                  >
                    hemp canvas
                  </td>
                  <td
                    align="left"
                  >
                    natural
                  </td>
                </tr>
                <tr>
                  <td>
                    11
                  </td>
                  <td
                    align="left"
                  >
                    glass
                  </td>
                  <td
                    align="left"
                  >
                    transparent
                  </td>
                </tr>
              </tbody>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Shoes, their sizes, and what they’re made of",
              },
              "ref": null,
              "rendered": "Shoes, their sizes, and what they’re made of",
              "type": "caption",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <th>
                    size
                  </th>
                  <th
                    align="left"
                  >
                    material
                  </th>
                  <th
                    align="left"
                  >
                    color
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      size
                    </th>,
                    <th
                      align="left"
                    >
                      material
                    </th>,
                    <th
                      align="left"
                    >
                      color
                    </th>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "size",
                    },
                    "ref": null,
                    "rendered": "size",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "material",
                    },
                    "ref": null,
                    "rendered": "material",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "align": "left",
                      "children": "color",
                    },
                    "ref": null,
                    "rendered": "color",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <tr>
                    <td>
                      9
                    </td>
                    <td
                      align="left"
                    >
                      leather
                    </td>
                    <td
                      align="left"
                    >
                      brown
                    </td>
                  </tr>,
                  <tr>
                    <td>
                      10
                    </td>
                    <td
                      align="left"
                    >
                      hemp canvas
                    </td>
                    <td
                      align="left"
                    >
                      natural
                    </td>
                  </tr>,
                  <tr>
                    <td>
                      11
                    </td>
                    <td
                      align="left"
                    >
                      glass
                    </td>
                    <td
                      align="left"
                    >
                      transparent
                    </td>
                  </tr>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <td>
                        9
                      </td>,
                      <td
                        align="left"
                      >
                        leather
                      </td>,
                      <td
                        align="left"
                      >
                        brown
                      </td>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "9",
                      },
                      "ref": null,
                      "rendered": "9",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "leather",
                      },
                      "ref": null,
                      "rendered": "leather",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "brown",
                      },
                      "ref": null,
                      "rendered": "brown",
                      "type": "td",
                    },
                  ],
                  "type": "tr",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <td>
                        10
                      </td>,
                      <td
                        align="left"
                      >
                        hemp canvas
                      </td>,
                      <td
                        align="left"
                      >
                        natural
                      </td>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "10",
                      },
                      "ref": null,
                      "rendered": "10",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "hemp canvas",
                      },
                      "ref": null,
                      "rendered": "hemp canvas",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "natural",
                      },
                      "ref": null,
                      "rendered": "natural",
                      "type": "td",
                    },
                  ],
                  "type": "tr",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <td>
                        11
                      </td>,
                      <td
                        align="left"
                      >
                        glass
                      </td>,
                      <td
                        align="left"
                      >
                        transparent
                      </td>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "11",
                      },
                      "ref": null,
                      "rendered": "11",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "glass",
                      },
                      "ref": null,
                      "rendered": "glass",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "align": "left",
                        "children": "transparent",
                      },
                      "ref": null,
                      "rendered": "transparent",
                      "type": "td",
                    },
                  ],
                  "type": "tr",
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
          },
          "ref": null,
          "rendered": "(The above is the caption for the table.) Pandoc also supports multi-line tables:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Here’s a definition list:",
          },
          "ref": null,
          "rendered": "Here’s a definition list:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <dt>
                apples
              </dt>,
              <dd>
                Good for making applesauce. oranges
              </dd>,
              <dd>
                Citrus! tomatoes
              </dd>,
              <dd>
                There’s no “e” in tomatoe.
              </dd>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "apples",
              },
              "ref": null,
              "rendered": "apples",
              "type": "dt",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Good for making applesauce. oranges",
              },
              "ref": null,
              "rendered": "Good for making applesauce. oranges",
              "type": "dd",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Citrus! tomatoes",
              },
              "ref": null,
              "rendered": "Citrus! tomatoes",
              "type": "dd",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "There’s no “e” in tomatoe.",
              },
              "ref": null,
              "rendered": "There’s no “e” in tomatoe.",
              "type": "dd",
            },
          ],
          "type": "dl",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
          },
          "ref": null,
          "rendered": "Again, text is indented 4 spaces. (Put a blank line between each term/definition pair to spread things out more.)",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Here’s a “line block”:",
          },
          "ref": null,
          "rendered": "Here’s a “line block”:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Line one",
              <br />,
              "  Line too",
              <br />,
              "Line tree",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Line one",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "  Line too",
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "Line tree",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "and images can be specified like so:",
          },
          "ref": null,
          "rendered": "and images can be specified like so:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="example"
                src="example-image.jpg"
                title="An exemplary image"
              />,
              <p>
                example image
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "alt": "example",
                "src": "example-image.jpg",
                "title": "An exemplary image",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "example image",
              },
              "ref": null,
              "rendered": "example image",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
